// <auto-generated />
using Bakery.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bakery.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bakery.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Product");
                });

            modelBuilder.Entity("Bakery.Models.Bread", b =>
                {
                    b.HasBaseType("Bakery.Models.Product");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Bread");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Bullar för stora mun",
                            Name = "MegaBullar",
                            Price = 60,
                            Quantity = 2,
                            Size = "Stor"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Sväljbara bullar",
                            Name = "MiniBullar",
                            Price = 20,
                            Quantity = 8,
                            Size = "Mini"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Lagom lätt tuggade bullar",
                            Name = "Bullar",
                            Price = 40,
                            Quantity = 4,
                            Size = "Normal"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Pepparkagor vandrar tillsammans hand-i-hand",
                            Name = "Peppakagor",
                            Price = 100,
                            Quantity = 35,
                            Size = "XL"
                        },
                        new
                        {
                            Id = 9,
                            Description = "gulaste gul i mitten",
                            Name = "Wienerbröö",
                            Price = 25,
                            Quantity = 5,
                            Size = "Xs"
                        });
                });

            modelBuilder.Entity("Bakery.Models.Cake", b =>
                {
                    b.HasBaseType("Bakery.Models.Product");

                    b.HasDiscriminator().HasValue("Cake");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Description = "Magisk röd tårta",
                            Name = "Jordgubbstårta",
                            Price = 200
                        },
                        new
                        {
                            Id = 3,
                            Description = "Magisk ljusröd tårta",
                            Name = "Hallontårta",
                            Price = 250
                        },
                        new
                        {
                            Id = 6,
                            Description = "Magisk mörk tårta",
                            Name = "Chokladtårta",
                            Price = 300
                        },
                        new
                        {
                            Id = 8,
                            Description = "klassisktårta med saftsås :) ",
                            Name = "TomtegrötTårta",
                            Price = 1500
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
